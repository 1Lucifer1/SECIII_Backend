@Grab('org.yaml:snakeyaml:1.17')
import org.yaml.snakeyaml.Yaml
import org.yaml.snakeyaml.DumperOptions
import static org.yaml.snakeyaml.DumperOptions.FlowStyle.BLOCK

def GetRemoteServer(ip){
    def remote = [:]
    remote.name = 'remoteServer'
    remote.host = ip
    remote.port = 22
    remote.user = 'root'
    remote.password = 'chenganchun.0811'
    remote.allowAnyHosts = true
    return remote
}
@NonCPS
String yamlToString(Object data){
    def opts = new DumperOptions()
    opts.setDefaultFlowStyle(BLOCK)
    return new Yaml(opts).dump(data)
}
pipeline {
    agent none
    stages {
        stage('Clone to master') {
            agent {
                label 'master'
            }
            steps {
                echo "1. Git Clone Stage"
                git credentialsId: '79d2c1e6-d63c-4284-bd1f-6b4f1dfe7f56', url: "http://212.129.149.40/181250010_irbl/backend.git"
            }
        }
        stage('Change yml property'){
            script{
                def yaml = readYaml file: "backend-test/src/main/resources/application.yml"
                yaml.data.info = 'hello world!'
                writeFile file:"test.yml", text:yamlToString(yaml)
            }
        }
        stage('Maven Build') {
            agent {
                docker {
                    image 'maven:latest'
                    args '-v /root/.m2:/root/.m2'

                }

            }
            steps {
                echo "2. Maven Build Stage"
                sh 'mvn -B clean package -Dmaven.test.skip=true'

            }
        }

    }
}